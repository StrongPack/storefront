name: Build and Deploy to Server

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and Push Backend Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Convert repo owner to lowercase
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV }}" > .env
          cat .env

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push storefront image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # tags: ghcr.io/${{ env.REPO_OWNER_LC }}/storefront:${{ github.sha }}
          tags: |
            ghcr.io/${{ env.REPO_OWNER_LC }}/storefront:${{ github.sha }}
            ghcr.io/${{ env.REPO_OWNER_LC }}/storefront:latest
          build-args: |
            NEXT_PUBLIC_SALEOR_API_URL=https://saleor.20pack.ir/graphql/


  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan -p 9011 -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Convert repo owner to lowercase
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Deploy to Server via SSH
        run: |
          ssh -p 9011 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            

            echo "Preparing backend directory..."
            if [ ! -d "/home/strongpack/storefront/.git" ]; then
                echo "Project not found. Cloning..."
                git clone git@github.com:StrongPack/storefront.git /home/strongpack/storefront
            else
                echo "Project exists. Pulling latest changes..."
                cd /home/strongpack/storefront
                git fetch origin
                git reset --hard origin/main
                git pull origin main
            fi

            cd /home/strongpack/storefront

            echo "Creating .env file..."
            echo "${{ secrets.ENV }}" > .env
            cat .env


            echo "Logging into GitHub Container Registry..."
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "Running Docker Compose..."

            # docker pull ghcr.io/${{ env.REPO_OWNER_LC }}/storefront:${{ github.sha }}
            # docker tag ghcr.io/${{ env.REPO_OWNER_LC }}/storefront:${{ github.sha }} storefront:latest
            # docker compose up -d --remove-orphans --force-recreate

            docker pull ghcr.io/${{ env.REPO_OWNER_LC }}/storefront:latest
            # docker compose up -d --remove-orphans --force-recreate
            docker compose up -d --no-deps storefront

            echo "Cleaning up old Docker images..."
            docker image prune -af

            echo "Deployment finished successfully!"
          EOF
